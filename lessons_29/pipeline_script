podTemplate(cloud: 'kubernetes', runAsUser: '0', containers: [
    containerTemplate(
        name: 'jnlp',
        image: 'anmaxx/jenkins-slave-terra',
        ttyEnabled: true,
        privileged: true,
        alwaysPullImage: false,
        workingDir: '/home/jenkins/agent',
        resourceRequestCpu: '300m',
        resourceLimitCpu: '300m',
        resourceRequestMemory: '512Mi',
        resourceLimitMemory: '512Mi',
        envVars: [
            envVar(key: 'JENKINS_URL', value: 'http://jenkins.jenkins.svc.cluster.local:8080'),
        ]
    ),
],
    volumes: [
        hostPathVolume(hostPath: '/var/run/docker.sock', mountPath: '/var/run/docker.sock'),
]
)
{
        node(POD_LABEL){
            container('jnlp') {
                tool name: 'apache-maven', type: 'maven'
                tool name: 'docker-latest'
      stage('Ckeck prerequest'){
        echo "${tool 'docker-latest'}"
        sh "ls -lah"
        withEnv(["PATH=${env.PATH}:${tool 'docker-latest'}/bin"]){
        sh "docker -v"
        }
      }
      stage('Checkout external proj') {
        git (branch: 'master',
        credentialsId: 'git',
        url: 'git@github.com:jenkins-docs/simple-java-maven-app.git')

          sh "ls -lat"
        }
        
      stage('Build') {
        withEnv(["PATH=${env.PATH}:${tool 'apache-maven'}/bin"]){
            sh 'mvn -B -DskipTests clean package'
      }
    }
      stage('Test') {
        withEnv(["PATH=${env.PATH}:${tool 'apache-maven'}/bin"]){
            sh 'mvn test'
            sh "ls -lah target/"
        }
          
    }
  
    stage('Checkout external proj') {
      git (branch: 'master',
      credentialsId: 'git',
      url: 'git@github.com:anmax87/test-jenkins.git')

        sh "ls -lat"
    }
    
    stage('Deploy Image') {
        script {
            withDockerRegistry(credentialsId: 'dockerhub', toolName: 'docker-latest') {
              withEnv(["PATH=${env.PATH}:${tool 'docker-latest'}/bin"]){
              def dockerImage = docker.build("anmaxx/jenkins-maven:${env.BUILD_ID}")
              dockerImage.push()
            }
          }            
        }
    }
    stage('Remove Unused docker image') {
      withEnv(["PATH=${env.PATH}:${tool 'docker-latest'}/bin"]){
        sh "docker rmi anmaxx/jenkins-maven:$BUILD_NUMBER"
      }
    }
            
            }
        }
}
